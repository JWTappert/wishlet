type User 
  @model
  @auth(rules: [{ allow: owner, operations: [create, delete, update] }])
  {
    id: ID!
    name: String!
    displayName: String!
    email: String!
    photoURL: String
    website: String
    facebook: String
    instagram: String
    twitter: String
    youtube: String

    wishlists: [Wishlist] @connection(keyName: "byWishlists", fields: ["id"])
}

type Wishlist 
  @model
  @auth(rules: [{ allow: owner, operations: [create, delete, update] }])
  @key(name: "byWishlists", fields: ["userID"]) 
  {
    id: ID!
    name: String!
    userID: ID!
    user: User @connection(fields: ["userID"])
    items: [Item] @connection(keyName: "byWishlist", fields: ["id"])
}

type Item 
  @model
  @auth(rules: [{ allow: owner, operations: [create, delete, update] }])
  @key(name: "byWishlist", fields: ["wishlistID", "name"]) 
  {
    id: ID!
    wishlistID: ID!
    wishlist: Wishlist @connection(fields: ["wishlistID"])
    name: String!
    link: String
    photoURL: String
}

type Event
  @model
  @auth(rules: [{allow: private, operations: [read]}])
  {
  id: ID!
  type : EventType!
  createdAt: String
  action: String
  userID: String
  wishlistID: String
  initiatingUserID: String
  receivingUserID: String
}

enum EventType {
  wishlist
  item
  user
}
